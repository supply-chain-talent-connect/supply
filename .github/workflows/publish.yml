# .github/workflows/publish.yml
name: Build & Deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR (push)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: bradjmsu
          password: ${{ secrets.GHCR_PAT }}     # PAT with write:packages (+ repo)
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Unraid over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ vars.UNRAID_HOST }}
          username: ${{ vars.UNRAID_SSH_USER }}
          key: ${{ secrets.UNRAID_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            cd /mnt/user/supply
            
            # Login to registry
            docker login ghcr.io -u bradjmsu -p ${{ secrets.GHCR_READ_PAT }} || exit 1
            
            # Pull the new image first (while old container still running)
            docker compose pull supply || exit 1
            
            # Recreate container with minimal downtime
            # Docker Compose will:
            # 1. Stop the old container
            # 2. Remove it
            # 3. Create and start new container
            # This happens in quick succession, typically < 1 second downtime
            docker compose up -d supply --remove-orphans || exit 1
            
            # Clean up old images to save space
            docker image prune -f
