steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/directus:latest', '.']
    dir: 'deployments/directus'
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/directus:latest']
  
  # IMPORTANT: Use pre-existing secrets in Secret Manager for Directus KEY/SECRET and DB password.
  # We intentionally do not create or rotate those here to avoid overwriting known values.
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'directus'
    - '--image'
    - 'gcr.io/$PROJECT_ID/directus:latest'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--memory'
    - '1Gi'
    - '--cpu'
    - '1'
    - '--max-instances'
    - '2'
    - '--min-instances'
    - '1'
    - '--port'
    - '8055'
    - '--timeout'
    - '300'
    - '--add-cloudsql-instances'
    - 'supply-chain-talent-connect:us-central1:supply-postgres-micro'
    - '--set-env-vars'
    - 'DB_CLIENT=pg'
    - '--set-env-vars'
    - 'DB_HOST=/cloudsql/supply-chain-talent-connect:us-central1:supply-postgres-micro'
    - '--set-env-vars'
    - 'DB_PORT=5432'
    - '--set-env-vars'
    - 'DB_DATABASE=directus_db'
    - '--set-env-vars'
    - 'DB_USER=directus'
    - '--set-env-vars'
    - 'PUBLIC_URL=https://admin.bradjohnson.ai'
    - '--set-env-vars'
    - 'ACCEPT_TERMS=true'
    - '--set-env-vars'
    - 'TELEMETRY=false'
    # Remove legacy bootstrap admin env to avoid confusion; use Directus users
    - '--remove-env-vars'
    - 'ADMIN_EMAIL,ADMIN_PASSWORD'
    # Use the custom domain we control so absolute URLs and CORS/origin checks are consistent
    # CORS: allow the app domains + localhost during development
    - '--set-env-vars'
    - 'CORS_ENABLED=true'
    - '--set-env-vars=^:^CORS_ORIGIN=https://bradjohnson.ai,https://www.bradjohnson.ai,https://test.bradjohnson.ai,https://admin.bradjohnson.ai,http://localhost:5173,https://localhost:5173,http://127.0.0.1:5173,http://10.0.20.150:5173,http://localhost:4173,http://10.0.20.150:4173'
    # Note: Rely on Directus defaults for CORS methods/headers; we only set origins.
    # Email (SMTP via Resend)
    - '--set-env-vars'
    - 'EMAIL_TRANSPORT=smtp'
    - '--set-env-vars'
    - 'EMAIL_FROM=hello@magicsocial.ai'
    - '--set-env-vars'
    - 'EMAIL_SMTP_HOST=smtp.resend.com'
    - '--set-env-vars'
    - 'EMAIL_SMTP_PORT=465'
    - '--set-env-vars'
    - 'EMAIL_SMTP_USER=resend'
    - '--set-env-vars'
    - 'EMAIL_SMTP_SECURE=true'
    - '--set-secrets'
    - 'EMAIL_SMTP_PASSWORD=resend-smtp-key:latest'
    # Cache configuration: disable Redis, use in-memory cache
    - '--set-env-vars'
    - 'CACHE_ENABLED=true'
    - '--set-env-vars'
    - 'CACHE_AUTO_PURGE=true'
    - '--set-env-vars'
    - 'CACHE_STORE=memory'
    # Logging and WebSockets
    - '--set-env-vars'
    - 'LOG_LEVEL=warn'
    - '--set-env-vars'
    - 'WEBSOCKETS_ENABLED=true'
    # Under-pressure: disable thresholds to suppress warnings on Cloud Run
    - '--set-env-vars'
    - 'UNDER_PRESSURE_MAX_EVENT_LOOP_DELAY=0'
    - '--set-env-vars'
    - 'UNDER_PRESSURE_MAX_HEAP_USED_BYTES=0'
    - '--set-env-vars'
    - 'UNDER_PRESSURE_MAX_RSS_BYTES=0'
    - '--set-env-vars'
    - 'UNDER_PRESSURE_MAX_EVENT_LOOP_UTILIZATION=0'
    - '--set-env-vars'
    - 'STORAGE_LOCATIONS=gcs'
    - '--set-env-vars'
    - 'STORAGE_GCS_DRIVER=gcs'
    - '--set-env-vars'
    - 'STORAGE_GCS_BUCKET=supply-assets-public'
    - '--set-secrets'
    - 'DB_PASSWORD=db-password:latest'
    - '--set-secrets'
    - 'KEY=directus-key:latest'
    - '--set-secrets'
    - 'SECRET=directus-secret:latest'

# Build timeout
timeout: '600s'

options:
  logging: CLOUD_LOGGING_ONLY
